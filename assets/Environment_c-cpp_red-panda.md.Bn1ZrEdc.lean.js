import{_ as i,c as n,am as p,G as e,B as t,o as l}from"./chunks/framework.K3xJXeUl.js";const r="/images/Environment/red-panda/rc-1.png",o="/images/Environment/red-panda/rc-2.png",d="/images/Environment/red-panda/%E4%B8%8B%E8%BD%BD8.png",h="/images/Environment/red-panda/%E4%B8%8B%E8%BD%BD9.png",c="/images/Environment/red-panda/%E4%B8%8B%E8%BD%BD10.png",g="/images/Environment/red-panda/%E4%B8%8B%E8%BD%BD11.png",k="/images/Environment/red-panda/%E4%B8%8B%E8%BD%BD12.png",m="/images/Environment/red-panda/%E5%AE%89%E8%A3%85%E5%AE%8C%E6%88%90.png",E="/images/Environment/red-panda/%E4%BD%BF%E7%94%A81.png",u="/images/Environment/red-panda/%E4%BD%BF%E7%94%A82.png",b="/images/Environment/red-panda/%E4%BD%BF%E7%94%A83.png",y="/images/Environment/red-panda/%E4%BD%BF%E7%94%A84.png",B="/images/Environment/red-panda/%E4%BD%BF%E7%94%A85.png",F="/images/Environment/red-panda/%E4%BD%BF%E7%94%A86.png",_="/images/Environment/red-panda/%E4%BD%BF%E7%94%A87.png",v="/images/Environment/red-panda/%E4%BD%BF%E7%94%A88.png",C="/images/Environment/red-panda/%E4%BD%BF%E7%94%A89.png",G=JSON.parse('{"title":"小熊猫Dev-C++","description":"","frontmatter":{},"headers":[],"relativePath":"Environment/c-cpp/red-panda.md","filePath":"Environment/c-cpp/red-panda.md","lastUpdated":1726758446000}'),D={name:"Environment/c-cpp/red-panda.md"};function f(A,a,q,z,P,x){const s=t("NolebaseGitChangelog");return l(),n("div",null,[a[0]||(a[0]=p('<div class="warning custom-block"><p class="custom-block-title">🚧WARNING</p><p>本条目仍在积极施工中，可能存在遗漏或不完善的地方</p></div><h1 id="小熊猫dev-c" tabindex="-1">小熊猫Dev-C++ <a class="header-anchor" href="#小熊猫dev-c" aria-label="Permalink to &quot;小熊猫Dev-C++&quot;">​</a></h1><p><img src="'+r+'" alt="小熊猫C++" loading="lazy"></p><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>小熊猫编译器（RedPanda-CPP）是轻量级的 C/C++ IDE 。它集成了GNU的GCC、G++编译器以及GDB调试器。它以简洁的用户界面、多平台支持（Windows、Mac OS、Linux）和高效的代码编辑功能为特点，适合编程初学者和教育用途。</p><p>小熊猫编译器提供了代码自动补全、语法高亮、代码导航等辅助工具，允许用户根据项目需求配置编译选项。</p><h2 id="下载" tabindex="-1">下载 <a class="header-anchor" href="#下载" aria-label="Permalink to &quot;下载&quot;">​</a></h2><h3 id="官网下载" tabindex="-1">官网下载 <a class="header-anchor" href="#官网下载" aria-label="Permalink to &quot;官网下载&quot;">​</a></h3><p><a href="http://royqh.net/redpandacpp/download/" target="_blank" rel="noreferrer">小熊猫官网</a>一共提供了三种下载渠道，这里只提供两种不限速的渠道：</p><ul><li><a href="https://wwe.lanzoui.com/b01os0mwd" target="_blank" rel="noreferrer">官方蓝奏云 - (密码：f0tp)</a></li></ul><div class="info custom-block"><p class="custom-block-title">📋Tips</p><p>蓝奏云下载方式请注意下载下图中所指示的版本</p><p><img src="'+o+'" alt="小熊猫C++-2" loading="lazy"></p></div><ul><li><a href="https://sourceforge.net/projects/redpanda-cpp/files/v3.1/RedPanda.C%2B%2B.3.1.win64.MinGW64_11.4.Setup.exe/download" target="_blank" rel="noreferrer">官方SourceForge仓库</a></li></ul><h3 id="本站下载" tabindex="-1">本站下载 <a class="header-anchor" href="#本站下载" aria-label="Permalink to &quot;本站下载&quot;">​</a></h3><p><a href="/download.html">点击此处下载</a></p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>打开下载好的安装程序，等待加载完成</p><p><img src="'+d+'" alt="下载8.png" loading="lazy"></p><p>选择 <code>简体中文</code> 并点击 <code>OK</code></p><p><img src="'+h+'" alt="下载9.png" loading="lazy"></p><p>用户协议选择 <code>我接受</code>，安装的用户选择 <code>只为我自己安装</code></p><p><img src="'+c+'" alt="下载10.png" loading="lazy"></p><p><img src="'+g+'" alt="下载11.png" loading="lazy"></p><p>接下来的安装路径自己选择即可，没有的话默认也可以。</p><p><img src="'+k+'" alt="下载12.png" loading="lazy"></p><p>点击完成即安装结束</p><p><img src="'+m+'" alt="安装完成.png" loading="lazy"></p><p>点击 <code>yes</code> 后开始设置主题</p><p><img src="'+E+'" alt="使用1.png" loading="lazy"></p><p>至此，我们的安装步骤完成</p><p><img src="'+u+'" alt="使用2.png" loading="lazy"></p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><h3 id="创建项目" tabindex="-1">创建项目 <a class="header-anchor" href="#创建项目" aria-label="Permalink to &quot;创建项目&quot;">​</a></h3><p>首先点击 <code>文件</code></p><p><img src="'+b+'" alt="使用3.png" loading="lazy"></p><p>选择 <code>新建</code> 然后点击 <code>创建新的C/C++文件</code> (也可以先创建一个项目然后在项目里创建C/C++文件)。</p><p>项目相当于一个文件夹，如果有很多相同性质的C/C++文件可以放在一个项目里。</p><div class="info custom-block"><p class="custom-block-title">📋Tips</p><p>但多说一句，项目的实际作用不止于此：它是一个完整的工程，里面会有多个完成特定功能的模块。感兴趣的同学可以在空余时间了解一下：在编程领域中，什么是项目。</p></div><p>这里用创建项目做演示：点击OK后会提示不存在该项目（如果存在说明重名了）</p><p><img src="'+y+'" alt="使用4.png" loading="lazy"></p><p>随后创建项目文件</p><p><img src="'+B+'" alt="使用5.png" loading="lazy"></p><p><img src="'+F+'" alt="使用6.png" loading="lazy"></p><h3 id="运行代码" tabindex="-1">运行代码 <a class="header-anchor" href="#运行代码" aria-label="Permalink to &quot;运行代码&quot;">​</a></h3><p>现在就可以编写第一个程序了</p><p><img src="'+_+`" alt="使用7.png" loading="lazy"></p><p>这是源代码</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;stdio.h&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//头文件，含有输入输出等函数的声明</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(){</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//也可以int main(void),void是表示“空”的数据类型</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a,b;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//定义了两个整数类型</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	scanf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">a,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b);</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//输入两个整数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;两数之和为</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,a</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//表示程序正常退出</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>运行结果</p><p><img src="`+v+'" alt="使用8.png" loading="lazy"></p><h2 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h2><p>在顶部菜单栏中，选择 <code>工具</code> - <code>选项</code>，找到窗口左侧列表中的外观</p><p><img src="'+C+'" alt="使用9.png" loading="lazy"></p><p>字体、背景、语法高亮等常见外观都可以在这里调整。</p><div class="info custom-block"><p class="custom-block-title">📋Tips</p><p>用到这里是不是感觉 小熊猫C++ 和 Dev-C++ 很相似呢？其实这两者之间有很大的联系。你可以简单地理解为：小熊猫C++ 是在 Dev-C++ 停止更新后的接替品。</p></div>',54)),e(s)])}const N=i(D,[["render",f]]);export{G as __pageData,N as default};
