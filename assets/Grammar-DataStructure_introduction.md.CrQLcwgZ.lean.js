import{_ as t,c as r,am as o,G as n,B as i,o as s}from"./chunks/framework.K3xJXeUl.js";const g=JSON.parse('{"title":"引入","description":"","frontmatter":{},"headers":[],"relativePath":"Grammar-DataStructure/introduction.md","filePath":"Grammar-DataStructure/introduction.md","lastUpdated":1723636074000}'),c={name:"Grammar-DataStructure/introduction.md"};function l(d,a,h,m,p,u){const e=i("NolebaseGitChangelog");return s(),r("div",null,[a[0]||(a[0]=o('<h1 id="引入" tabindex="-1">引入 <a class="header-anchor" href="#引入" aria-label="Permalink to &quot;引入&quot;">​</a></h1><h2 id="写在前面" tabindex="-1">写在前面 <a class="header-anchor" href="#写在前面" aria-label="Permalink to &quot;写在前面&quot;">​</a></h2><p>经过漫长的环境配置阶段后，接下来要做的就是学习每个语言的语法和特性。语法基础非常重要，内容也比较多，所以请各位初学者认真查看本文档。</p><h2 id="内容分配" tabindex="-1">内容分配 <a class="header-anchor" href="#内容分配" aria-label="Permalink to &quot;内容分配&quot;">​</a></h2><p>本版块的主题是 <em><strong>语法基础&amp;基础数据结构</strong></em> ，在介绍每种语言的语法基础和特性的同时，也会穿插基础的数据结构的讲解（数组）。数组是最基本的数据结构，以数组为基底可以推广出栈、队列、哈希表、堆、图等复杂的数据结构。例如，图的邻接矩阵表示实际上是一个 <strong>二维数组</strong> 。</p><h2 id="写在最后" tabindex="-1">写在最后 <a class="header-anchor" href="#写在最后" aria-label="Permalink to &quot;写在最后&quot;">​</a></h2><p>由于语法基础内容过多且结构复杂，部分细节在初期可能无法顾及到，会在之后的更新中慢慢弥补缺漏，欢迎各位积极在 <a href="https://qm.qq.com/q/j2cMp91JUQ" target="_blank" rel="noreferrer">QQ交流群</a> 或 <a href="https://github.com/DevBeginner-Doc/DevBeginner-Doc" target="_blank" rel="noreferrer">文档仓库</a> 中提出问题和建议，我们会看到并选取合理的建议进行采纳。</p>',7)),n(e)])}const b=t(c,[["render",l]]);export{g as __pageData,b as default};
